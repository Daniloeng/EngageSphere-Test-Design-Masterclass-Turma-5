name: Cypress E2E Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  start-services:
    name: Start Backend and Frontend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # Instalar dependências e iniciar o backend
      - name: Install and start backend
        run: |
          cd backend
          npm ci
          npm start &
        env:
          NODE_ENV: test

      # Instalar dependências e iniciar o frontend
      - name: Install and start frontend
        run: |
          cd frontend
          npm ci
          npm start &
        env:
          NODE_ENV: test

      # Esperar até que backend e frontend estejam prontos
      - name: Wait for backend and frontend
        run: npx wait-on ${{ secrets.GUI_URL }} ${{ secrets.API_URL }}/api-docs

  cypress-tests:
    name: Run Cypress Tests
    runs-on: ubuntu-latest
    needs: start-services

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Run Cypress tests
        run: npx cypress run --spec "cypress/e2e/**/*.cy.js"
        env:
          GUI_URL: ${{ secrets.GUI_URL }}
          API_URL: ${{ secrets.API_URL }}

      - name: Upload Cypress videos (if tests fail)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-videos
          path: cypress/videos

